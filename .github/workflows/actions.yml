name: Full CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_IMAGE: nniinjjii/calentalk
  IMAGE_TAG: latest
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: setup jdk 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: build with gradle
        run: ./gradlew clean build -x test

      - name: Naming jar file
        run: mv build/libs/*.jar build/libs/calentalk.jar

      - name: Check jar file
        run: ls build/libs

        ## Artifact upload
      - name: Upload JAR as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: calentalk
          path: build/libs/*.jar


  deploy:
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: calentalk

      - name: Move jar to build/libs
        run: |
          mkdir -p build/libs
          mv *.jar build/libs/

      - name: Check jar file
        run: ls ./build/libs

      ## Docker settings

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build -t nniinjjii/calentalk:latest

      - name: PUSH to Docker Hub
        run: |
          docker push nniinjjii/calentalk:latest

      - name: SSH Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" > .env
            echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
            docker pull ${{ secrets.DOCKER_USERNAME }}/calentalk:latest
            sudo docker-compose up -d
            sudo docker image prune -a -f

