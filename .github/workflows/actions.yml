name: CI/CD with public ECR Pipeline

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_IMAGE: nniinjjii/calentalk
  IMAGE_TAG: latest
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
  REGISTRY_ALIAS: ${{ secrets.ECR_ID }}
  REPOSITORY: calentalk

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: setup jdk 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: build with gradle
        run: ./gradlew clean build -x test

      - name: Rename jar file
        run: mv build/libs/calenTalk-0.0.1-SNAPSHOT.jar build/libs/calentalk.jar

      - name: Check jar file
        run: ls build/libs

        ## Artifact upload
      - name: Upload JAR as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: calentalk
          path: build/libs/*.jar


  deploy:
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: calentalk

      - name: Move jar to build/libs
        run: |
          mkdir -p build/libs
          mv *.jar build/libs/

      ## ECR settings
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        run: |
          export REGISTRY=${{ steps.login-ecr-public.outputs.registry }}
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/${REGISTRY_ALIAS}
          docker build -t $REGISTRY/${REGISTRY_ALIAS}/calentalk:${IMAGE_TAG} .
          docker push $REGISTRY/${REGISTRY_ALIAS}/calentalk:${IMAGE_TAG}

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: Copy files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -r \
            docker-compose.yml dbinit \
            ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}

      - name: SSH Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            ECR_ID=${{ secrets.ECR_ID }}
            aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/$ECR_ID
            sudo docker pull public.ecr.aws/$ECR_ID/calentalk:latest
            
            cd /home/${{ secrets.EC2_USERNAME }}
            sudo docker compose down || true
            sudo docker compose up -d